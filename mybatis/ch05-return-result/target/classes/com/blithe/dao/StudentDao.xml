<?xml version="1.0" encoding="UTF-8" ?><!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.blithe.dao.StudentDao">
    <select id="SelectStudentById"  resultType="Student">
        select id,name,email,age from student where id = #{id1} ;
    </select>

    <select id="selectMultiParam" resultType="Student">
        select id,name,email,age from student where name = #{myname} or age=#{myage};
    </select>

    <select id="selectStudentReturnViewStudent" resultType="ViewStudent">
        select id,name,email,age from student where id = #{id};
    </select>

    <select id="countStudent" resultType="int">
        select count(*) from student;
    </select>

    <!--返回Map
        1)列明是map的key，列值是map的value
        2)只能最多返回一行记录。多余一行是错误
    -->
    <select id="selectMapById" resultType="java.util.HashMap">
        select * from student where id > #{id}
    </select>

    <!--使用resultMap
        1）先定义resultMap
        2）在select标签，使用resultMap来引用定义的
    -->

    <!--定义resultMap
        id：自定义名称，表你定义的这个resultMap的
        type：java类型的全限定名称
    -->
    <resultMap id="studentMap" type="com.blithe.domain.Student">
        <!--定义列名和java属性的关系-->
        <!--主键列使用id
            column:列名
            property:Java类型的属性名
        -->
        <id column="id" property="id"/>
        <!--非主键列，使用result-->
        <result column="name" property="name"/>
        <result column="email" property="email"/>
        <result column="age" property="age"/>
    </resultMap>
    <select id="selectAllStudents" resultMap="studentMap">
        select * from student;
    </select>

    <!--列名和属性名不一样：
        resultType的默认原则是  同名的列值赋给同名的属性,使用列别名
    -->

    <select id="selectDiffColProperty" resultType="com.blithe.domain.MyStudent">
        select id stuId , name stuName , email stuEmail , age stuAge from student;
    </select>

    <!--第一种like , java代码指定like的内容-->
    <select id="selectLikeOne" resultType="com.blithe.domain.Student">
        select id,name,email,age from student where name like #{name};
    </select>

    <!--第二种方式：在mapper文件中来拼接like的内容-->
    <select id="selectLikeTwo" resultType="com.blithe.domain.Student">
        select id,name,email,age from student where name like '%' #{name} '%'
    </select>
</mapper>
