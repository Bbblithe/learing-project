AJAX

一、全局刷新和局部刷新

	全局刷新：
		整个浏览器被新的数据覆盖。在网络中传输大量的数据。浏览器需要加载，渲染页面

	局部刷新：
		在浏览器的内部，发起请求，获取数据，改变页面中的部分内容。其余的页面无需加
		载和渲染。网络中数据传输量少，给用户体验感受好。

	ajax使用来做局部刷新的。局部刷新使用的核心对象是---异步对象(XMLHttpRequest)
	这个异步对象是存在浏览器内存中的，使用javascript语法创建和使用XMLHttpRequest
	对象。

二、ajax：Asynchronous JavaScript and XML（异步的JavaScript 和 XML）
	Asynchronous：异步
	JavaScript：javaScript脚本，在浏览器中执行
	and：和
	XML：是一种数据格式
		例如：之前的web.xml配置文件
			<servlet>
				<servlet-name>xxx</servlet-name>
				<servlet-class>xxx</servlet-class>
			</servlet>
			<servlet-mapping>
				<servlet-name>xxx</servlet-name>
				<url-pattern>/xxx</url-pattern>
			</servlet-mapping>


	ajax是一种局部刷新的方法（2003左右)，不是一种语言。ajax包含的技术主要有javascript，
	dom，css，xml等等。核心是javascript 和 xml。
	javascript：负责创建异步对象，发送请求，更新页面的dom对象。ajax请求需要服务器端
	数据
	xml：网络中传输的数据格式。现在使用json替换了xml

		<数据>
			<数据1>宝马1</数据1>
			<数据2>宝马2</数据2>
			<数据3>宝马3</数据3>
			<数据4>宝马4</数据4>
		</数据>

三、ajax中使用XMLHttpRequest对象
	
	1.创建异步对象 
		var xmlHttp = new XMLHttpRequest();

	2.给异步对象绑定事件:onreadystatechange —— 当异步对象发起请求，获取了数据都会触发
	这个事件。这个事件需要指定一个函数，在函数中处理状态的变化。

		例如：
			xmlHttp.onreadystatechange = function() {
				处理请求的状态变化。

				if(xmlHttp.readyState == 4 && xmlHttp.status == 200){
					// 可以处理服务器段的数据，更新当前页面
					var data = xmlHttp.responseText;
					document.getElementById("name").vlaue = data;
				}
			}

		异步对象的属性 readyState 表示异步对象请求状态的变化
			* 0：创建异步对象时， new XMLHttpRequest();
			* 1：初始异步请求对象，xmlHttp.open();
			* 2：发送请求，xmlHttp.send();
			* 3：从服务器端获取了数据，此时3，注意3是异步对象内部使用，获取了原始的数据。
			* 4：异步对象把接收的数据处理完成后。此时开发人员在4的时候处理数据。
				在4的时候，开发人员做什么？更新当前页面。

		异步对象的属性 status属性 表示网络请求的状况【200，404，500】，需要当status==
		200时，表示网络请求是成功的

	3.初始异步请求对象

		异步对象的方法 open()：
			xmlHttp.open(请求方式get/post,"服务器端的访问地址",同步/异步请求[默认是true，异步请求]);
			例如：
				xmlHttp.open("get","loginServlet?name=zs&pwd=123",true);

	4.使用异步对象发送请求

		异步对象的方法 send()

	获取服务器端返回的数据，使用异步对象的属性 responseText.

	回调：当请求的状态变化时，异步对象会自动调用onreadystatechange事件对应的函数。

	访问地址：使用get方式传递参数
	http://localhost:8080/myWeb/bmiPrint?name=blithe&w=82&h=1.77



	通过ajax发起请求------Servlet（返回的一个json格式的字符串[name:"四川",jiancheng:"川",shenghui:"成都"]）
	json分类：
		* json对象，JSONObject，这种对象的格式——名称:值，也可以看做是 key:value 格式
		* json数组，JSONArray，基本格式 [{name:"四川",jiancheng:"川",shenghui:"成都"},{name:"山西",jiancheng:"晋",shneghui:"太原"}]

	为什么使用json：
		* json格式好理解
		* json格式数据在多种语言中，比较好处理。使用java，javascript读写json格式的数据比较容易。
		* json格式的数据他占用的空间小，在网络中传输快，用户的体验就好

	处理json的工具库：gson(google)、fastjson（阿里），jackson，json-lib

在js中，可以把json格式的字符串，转为json对象，json中的key，就是json对象的属性名。