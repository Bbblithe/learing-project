
1、关于查询结果的去重？
	select distinct job from emp; // distinct关键字去除重复记录。
	+-----------+
	| job       |
	+-----------+
	| CLERK     |
	| SALESMAN  |
	| MANAGER   |
	| ANALYST   |
	| PRESIDENT |
	+-----------+

	select ename,distinct job from emp;
	以上的sql语句是错误的。
	记住：distinct只能出现在所有字段的最前面。

	select distinct deptno,job from emp;
	+--------+-----------+
	| deptno | job       |
	+--------+-----------+
	|     20 | CLERK     |
	|     30 | SALESMAN  |
	|     20 | MANAGER   |
	|     30 | MANAGER   |
	|     10 | MANAGER   |
	|     20 | ANALYST   |
	|     10 | PRESIDENT |
	|     30 | CLERK     |
	|     10 | CLERK     |
	+--------+-----------+

	案例：统计岗位的数量？
	select count(distinct job) from emp;
	+---------------------+
	| count(distinct job) |
	+---------------------+
	|                   5 |
	+---------------------+

2、连接查询

2.1、什么是连接查询？
	在实际开发中，大部分的情况下都不是从单表中查询数据，一般都是多张表联合查询取出最终的结果。
	在实际开发中，一般一个业务都会对应多张表，比如：学生和班级，起码两张表
	如果学生和班级两个信息存储在同一张表中，数据就会存在大量的重复，导致数据的冗余。

2.2、连接查询的分类？
	根据语法出现的年代来划分的话，包括：
		SQL92（一些老的DBA可能还在使用这种语法。DBA：DataBase Administrator，数据库管理员）
		SQL99（比较新的语法）	

	跟据表的连接方式来划分，包括：
		内连接：
			等值连接
			非等值连接 
			自连接
		外连接：
			左外连接（左连接）
			右外连接（右连接）
		全连接（这个不学，很少用！）	

2.3、在表的连接查询方面有一种现象被称为：笛卡尔积现象。（笛卡尔乘积现象）

案例：找出每一个员工的部门名称，要求显示员工名和部门名。
EMP表
+--------+--------+
| ename  | deptno |
+--------+--------+
| SMITH  |     20 |
| ALLEN  |     30 |
| WARD   |     30 |
| JONES  |     20 |
| MARTIN |     30 |
| BLAKE  |     30 |
| CLARK  |     10 |
| SCOTT  |     20 |
| KING   |     10 |
| TURNER |     30 |
| ADAMS  |     20 |
| JAMES  |     30 |
| FORD   |     20 |
| MILLER |     10 |
+--------+--------+		
DEPT表
+--------+------------+----------+
| DEPTNO | DNAME      | LOC      |
+--------+------------+----------+
|     10 | ACCOUNTING | NEW YORK |
|     20 | RESEARCH   | DALLAS   |
|     30 | SALES      | CHICAGO  |
|     40 | OPERATIONS | BOSTON   |
+--------+------------+----------+

select ename,dname from emp,dept;
+--------+------------+
| ename  | dname      |
+--------+------------+
| SMITH  | ACCOUNTING |
| SMITH  | RESEARCH   |
| SMITH  | SALES      |
| SMITH  | OPERATIONS |
| ALLEN  | ACCOUNTING |
| ALLEN  | RESEARCH   |
| ALLEN  | SALES      |
| ALLEN  | OPERATIONS |
......
56 rows in set

笛卡尔积现象：当两张表进行连接查询的时候，没有任何条件进行限制，最终的查询结果条数是两张表记录条数的乘积。

关于表的别名：
	select e.ename,d.dname from emp e ,dept d;
	表的别名有什么好处？
		第一：执行效率高。
		第二：可读性好。

2.4、怎么避免笛卡尔积现象？当然是加条件进行过滤。
思考：避免了笛卡尔积现象，会减少记录的匹配次数吗？
	不会，次数还是56次。只不过显示的是有效记录。

案例：找出每一个员工的部门名称，要求显示员工名和部门名。
	select
		e.ename,d.dname
	from 
		emp e , dept d 			
	where 
		e.deptno = d.deptno;// SQL92,以后不用。

	+--------+------------+
	| ename  | dname      |
	+--------+------------+
	| SMITH  | RESEARCH   |
	| ALLEN  | SALES      |
	| WARD   | SALES      |
	| JONES  | RESEARCH   |
	| MARTIN | SALES      |
	| BLAKE  | SALES      |
	| CLARK  | ACCOUNTING |
	| SCOTT  | RESEARCH   |
	| KING   | ACCOUNTING |
	| TURNER | SALES      |
	| ADAMS  | RESEARCH   |
	| JAMES  | SALES      |
	| FORD   | RESEARCH   |
	| MILLER | ACCOUNTING |
	+--------+------------+

2.5、内连接之等值连接：最大的特点是：条件等值关系。

案例：查询每个员工的部门名称，要求显示员工名和部门名。

SQL92:（太老，不用了）
	select e.ename,d.dname from emp e,dept d where e.deptno = d.deptno;

SQL99:（常用的）	
	select e.ename,d.dname from emp e join dept d on e.deptno = d.deptno;

	// inner可以省略的，带着inner目的是可读性好一些。
	select e.ename,d.dname from emp e inner join dept d on e.deptno = d.deptno;
	语法：
		...
			A
		join 
			B
		on
			连接条件
		where
			...
	SQL99语法结构更清晰一些，表的连接条件和后来的where条件分离了。
	+--------+------------+
	| ename  | dname      |
	+--------+------------+
	| SMITH  | RESEARCH   |
	| ALLEN  | SALES      |
	| WARD   | SALES      |
	| JONES  | RESEARCH   |
	| MARTIN | SALES      |
	| BLAKE  | SALES      |
	| CLARK  | ACCOUNTING |
	| SCOTT  | RESEARCH   |
	| KING   | ACCOUNTING |
	| TURNER | SALES      |
	| ADAMS  | RESEARCH   |
	| JAMES  | SALES      |
	| FORD   | RESEARCH   |
	| MILLER | ACCOUNTING |
	+--------+------------+	

2.6、内连接之非等值连接：最大的特点是：连接条件中的关系是非等量关系。

案例：找出每个员工的工资等级，要求显示员工名、工资、工资等级。	
select ename,sal,s.grade from emp e join salgrade s on e.sal between s.losal and s.hisal;
+--------+---------+-------+
| ename  | sal     | grade |
+--------+---------+-------+
| SMITH  |  800.00 |     1 |
| ALLEN  | 1600.00 |     3 |
| WARD   | 1250.00 |     2 |
| JONES  | 2975.00 |     4 |
| MARTIN | 1250.00 |     2 |
| BLAKE  | 2850.00 |     4 |
| CLARK  | 2450.00 |     4 |
| SCOTT  | 3000.00 |     4 |
| KING   | 5000.00 |     5 |
| TURNER | 1500.00 |     3 |
| ADAMS  | 1100.00 |     1 |
| JAMES  |  950.00 |     1 |
| FORD   | 3000.00 |     4 |
| MILLER | 1300.00 |     2 |
+--------+---------+-------+

2.7、自连接：最大的特点是：一张表看作两张表。自己连接自己。

案例：找出每个员工的上级领导，要求显示员工名和对应的领导名。

select empno,ename,mgr from emp;
emp A 员工表
+-------+--------+------+
| empno | ename  | mgr  |
+-------+--------+------+
|  7369 | SMITH  | 7902 |
|  7499 | ALLEN  | 7698 |
|  7521 | WARD   | 7698 |
|  7566 | JONES  | 7839 |
|  7654 | MARTIN | 7698 |
|  7698 | BLAKE  | 7839 |
|  7782 | CLARK  | 7839 |
|  7788 | SCOTT  | 7566 |
|  7839 | KING   | NULL |
|  7844 | TURNER | 7698 |
|  7876 | ADAMS  | 7788 |
|  7900 | JAMES  | 7698 |
|  7902 | FORD   | 7566 |
|  7934 | MILLER | 7782 |
+-------+--------+------+
emp B 领导表
+-------+--------+
| empno | ename  |
+-------+--------+
|  7566 | JONES  | 
|  7698 | BLAKE  | 
|  7782 | CLARK  | 
|  7788 | SCOTT  | 
|  7839 | KING   |  
|  7902 | FORD   | 
+-------+--------+

员工的领导编号 = 领导的员工编号

select a.ename '员工',b.ename '上司' from emp a inner join emp b on a.mgr = b.empno;

+--------+--------+
| 员工    | 上司    |
+--------+--------+
| SMITH  | FORD   |
| ALLEN  | BLAKE  |
| WARD   | BLAKE  |
| JONES  | KING   |
| MARTIN | BLAKE  |
| BLAKE  | KING   |
| CLARK  | KING   |
| SCOTT  | JONES  |
| TURNER | BLAKE  |
| ADAMS  | SCOTT  |
| JAMES  | BLAKE  |
| FORD   | JONES  |
| MILLER | CLARK  |
+--------+--------+

2.8、外连接
	
什么是外连接，和内连接有什么区别？
	内连接：
		假设A和B表进行连接，使用内连接的话，凡是A表和B表能够匹配上的记录查询出来，这就是内连接。
		AB两张表没有主副之分，两张表是平等的。

	外连接：
		假设A和B表进行连接，使用外连接的话，AB两张表中有一张表是主表，一张表是副表，主要查询主表中
		的数据，捎带着查询副表，当副表中的数据没有和主表中的数据匹配上，副表自动模拟出NULL与之匹配。

	外连接的分类？
		左外连接（左连接）：表示左边的这张表是主表。
		右外连接（右连接）：表示右边的这张表是主表。

		左连接有右连接的写法，右连接也会有对应的左连接的写法。

案例：找出每个员工的上级领导？（所有员工必须全部查询出来。）

emp A 员工表
+-------+--------+------+
| empno | ename  | mgr  |
+-------+--------+------+
|  7369 | SMITH  | 7902 |
|  7499 | ALLEN  | 7698 |
|  7521 | WARD   | 7698 |
|  7566 | JONES  | 7839 |
|  7654 | MARTIN | 7698 |
|  7698 | BLAKE  | 7839 |
|  7782 | CLARK  | 7839 |
|  7788 | SCOTT  | 7566 |
|  7839 | KING   | NULL |
|  7844 | TURNER | 7698 |
|  7876 | ADAMS  | 7788 |
|  7900 | JAMES  | 7698 |
|  7902 | FORD   | 7566 |
|  7934 | MILLER | 7782 |
+-------+--------+------+
emp B 领导表
+-------+--------+
| empno | ename  |
+-------+--------+
|  7566 | JONES  | 
|  7698 | BLAKE  | 
|  7782 | CLARK  | 
|  7788 | SCOTT  | 
|  7839 | KING   |  
|  7902 | FORD   | 
+-------+--------+

内连接：
	select a.ename '员工',b.ename '领导' from emp a join emp b on a.mgr = b.empno;

//外连接的outer可以省略。
外连接：(左外连接/左连接)：
	select a.ename '员工',b.ename '领导' from emp a left join emp b on a.mgr = b.empno;

外连接：(右外连接/右连接)：
	select a.ename '员工' , b.ename '领导' from emp b right join emp a on a.mgr = b.empno;
	+--------+--------+
	| 员工   | 领导   |
	+--------+--------+
	| SMITH  | FORD   |
	| ALLEN  | BLAKE  |
	| WARD   | BLAKE  |
	| JONES  | KING   |
	| MARTIN | BLAKE  |
	| BLAKE  | KING   |
	| CLARK  | KING   |
	| SCOTT  | JONES  |
	| KING   | NULL   |
	| TURNER | BLAKE  |
	| ADAMS  | SCOTT  |
	| JAMES  | BLAKE  |
	| FORD   | JONES  |
	| MILLER | CLARK  |
	+--------+--------+

外连接最重要的特点是：主表的数据无条件的全部查询出来。

案例：找出哪个部门没有员工？
emp
+-------+--------+-----------+------+------------+---------+---------+--------+
| EMPNO | ENAME  | JOB       | MGR  | HIREDATE   | SAL     | COMM    | DEPTNO |
+-------+--------+-----------+------+------------+---------+---------+--------+
|  7369 | SMITH  | CLERK     | 7902 | 1980-12-17 |  800.00 |    NULL |     20 |
|  7499 | ALLEN  | SALESMAN  | 7698 | 1981-02-20 | 1600.00 |  300.00 |     30 |
|  7521 | WARD   | SALESMAN  | 7698 | 1981-02-22 | 1250.00 |  500.00 |     30 |
|  7566 | JONES  | MANAGER   | 7839 | 1981-04-02 | 2975.00 |    NULL |     20 |
|  7654 | MARTIN | SALESMAN  | 7698 | 1981-09-28 | 1250.00 | 1400.00 |     30 |
|  7698 | BLAKE  | MANAGER   | 7839 | 1981-05-01 | 2850.00 |    NULL |     30 |
|  7782 | CLARK  | MANAGER   | 7839 | 1981-06-09 | 2450.00 |    NULL |     10 |
|  7788 | SCOTT  | ANALYST   | 7566 | 1987-04-19 | 3000.00 |    NULL |     20 |
|  7839 | KING   | PRESIDENT | NULL | 1981-11-17 | 5000.00 |    NULL |     10 |
|  7844 | TURNER | SALESMAN  | 7698 | 1981-09-08 | 1500.00 |    0.00 |     30 |
|  7876 | ADAMS  | CLERK     | 7788 | 1987-05-23 | 1100.00 |    NULL |     20 |
|  7900 | JAMES  | CLERK     | 7698 | 1981-12-03 |  950.00 |    NULL |     30 |
|  7902 | FORD   | ANALYST   | 7566 | 1981-12-03 | 3000.00 |    NULL |     20 |
|  7934 | MILLER | CLERK     | 7782 | 1982-01-23 | 1300.00 |    NULL |     10 |
+-------+--------+-----------+------+------------+---------+---------+--------+

dept
+--------+------------+----------+
| DEPTNO | DNAME      | LOC      |
+--------+------------+----------+
|     10 | ACCOUNTING | NEW YORK |
|     20 | RESEARCH   | DALLAS   |
|     30 | SALES      | CHICAGO  |
|     40 | OPERATIONS | BOSTON   |
+--------+------------+----------+

select d.* from emp e right join dept d on d.deptno = e.deptno where e.empno is null;

+--------+------------+--------+
| DEPTNO | DNAME      | LOC    |
+--------+------------+--------+
|     40 | OPERATIONS | BOSTON |
+--------+------------+--------+

2.9、三张表怎么连接查询？
案例：找出每一个员工的部门名称以及工资等级。
EMP e
+--------+--------+-------+---------+
| deptno | ename  | empno | sal     |
+--------+--------+-------+---------+
|     20 | SMITH  |  7369 |  800.00 |
|     30 | ALLEN  |  7499 | 1600.00 |
|     30 | WARD   |  7521 | 1250.00 |
|     20 | JONES  |  7566 | 2975.00 |
|     30 | MARTIN |  7654 | 1250.00 |
|     30 | BLAKE  |  7698 | 2850.00 |
|     10 | CLARK  |  7782 | 2450.00 |
|     20 | SCOTT  |  7788 | 3000.00 |
|     10 | KING   |  7839 | 5000.00 |
|     30 | TURNER |  7844 | 1500.00 |
|     20 | ADAMS  |  7876 | 1100.00 |
|     30 | JAMES  |  7900 |  950.00 |
|     20 | FORD   |  7902 | 3000.00 |
|     10 | MILLER |  7934 | 1300.00 |
+--------+--------+-------+---------+
DEPT d
+--------+------------+----------+
| DEPTNO | DNAME      | LOC      |
+--------+------------+----------+
|     10 | ACCOUNTING | NEW YORK |
|     20 | RESEARCH   | DALLAS   |
|     30 | SALES      | CHICAGO  |
|     40 | OPERATIONS | BOSTON   |
+--------+------------+----------+
SAlGRADE s
+-------+-------+-------+
| GRADE | LOSAL | HISAL |
+-------+-------+-------+
|     1 |   700 |  1200 |
|     2 |  1201 |  1400 |
|     3 |  1401 |  2000 |
|     4 |  2001 |  3000 |
|     5 |  3001 |  9999 |
+-------+-------+-------+

注意，解释一下：
		A
	join
		B
	join
		C
	on
		...

	表示：A表和B表先进行表连接，连接之后A表继续和C表进行连接。

	select 
		e.ename,d.dname,s.grade
	from
		emp e
	join 
		dept d
	on 
	 	e.deptno = d.deptno
	join 
		salgrade s
	on e.sal between s.losal and s.hisal;

	+--------+------------+-------+
	| ename  | dname      | grade |
	+--------+------------+-------+
	| SMITH  | RESEARCH   |     1 |
	| ALLEN  | SALES      |     3 |
	| WARD   | SALES      |     2 |
	| JONES  | RESEARCH   |     4 |
	| MARTIN | SALES      |     2 |
	| BLAKE  | SALES      |     4 |
	| CLARK  | ACCOUNTING |     4 |
	| SCOTT  | RESEARCH   |     4 |
	| KING   | ACCOUNTING |     5 |
	| TURNER | SALES      |     3 |
	| ADAMS  | RESEARCH   |     1 |
	| JAMES  | SALES      |     1 |
	| FORD   | RESEARCH   |     4 |
	| MILLER | ACCOUNTING |     2 |
	+--------+------------+-------+

案例：找出每一个员工的部门名称、工资等级、以及上级领导。
	select 
		e1.ename'員工',d.dname,s.grade,e2.ename '領導'
	from 
		emp e1
	join 
		dept d
	on 
		e1.deptno = d.deptno 
	join 
		salgrade s
	on 
		e1.sal between s.losal and s.hisal
	left join 
		emp e2
	on 
		e1.mgr = e2.empno;
	+--------+------------+-------+--------+
	| 員工   | dname      | grade | 領導   |
	+--------+------------+-------+--------+
	| SMITH  | RESEARCH   |     1 | FORD   |
	| ALLEN  | SALES      |     3 | BLAKE  |
	| WARD   | SALES      |     2 | BLAKE  |
	| JONES  | RESEARCH   |     4 | KING   |
	| MARTIN | SALES      |     2 | BLAKE  |
	| BLAKE  | SALES      |     4 | KING   |
	| CLARK  | ACCOUNTING |     4 | KING   |
	| SCOTT  | RESEARCH   |     4 | JONES  |
	| KING   | ACCOUNTING |     5 | NULL   |
	| TURNER | SALES      |     3 | BLAKE  |
	| ADAMS  | RESEARCH   |     1 | SCOTT  |
	| JAMES  | SALES      |     1 | BLAKE  |
	| FORD   | RESEARCH   |     4 | JONES  |
	| MILLER | ACCOUNTING |     2 | CLARK  |
	+--------+------------+-------+--------+
