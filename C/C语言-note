C语言

1.操作符
	* 复合赋值符
    	+= -= *= /= %= >>= <<= &=

	* 赋值操作符
	 	=
	* 单目操作符
		- ‘!’ : 逻辑反操作符
		- ‘-’ : 负号
		- ‘&’ : 去地址
		- ‘sizeof()’ : 计算的是变量/类型所占空间的大小，单位是字节
			如果sizeof 后面放入的是变量名则"()"可以省略。
		- '~' : 对一个数的二进制按位取反
		- '--,++' : 自加，自减
		- "(类型)" : 强制类型转换

	* 双目操作符
		+ - = 

	* 逻辑操作符
		- "=="
		- "!="
		- ">="
		- "<="

	* 条件操作符
		(exp1 ? exp2 : exp3)

	* 逗号表达式
		exp1,exp2,exp3,expn
		表达式结果位expn

	* 下标引用操作符
		"[]"
	
	* 函数调用操作符
		"()"

2.位移运算符

	* 移 (2进制) 移位操作符
    	- '<<' 左移操作符
    	- '>>' 右移操作符

	* (2进制)位操作
		- '&'  按位与
		- '|'  按位或
		- '^'  按位异或 满足交换律

3.系统操作
	* cmd操作命令
		- shutdown -s -t 60 // '-s'代表关机 '-t'代表关机时间 60 秒
		- shutdown -a // '-a' 取消关机

	* 库函数<stdlib.h> : system() - 专门用来执行系统命令的
	 	- system("shutdown -s -t 60"); // 直接使用cmd命令

4.字符串
	* 字符串可以直接存储在char[] 数组中，且数组以'\0'结束

5.数组
	* 声明方式：
		- int arr[10]; 声明一个int类型的数组，数组长度为10;

		-
		 #define N 10
		 int arr[N]  数组[] 中必须放入一个常量，不能放入变量

		- int arr[] = {1,3,5,6,7}; // 初始化默认长度，则不需要声明数组长度 数组长度等于数组元素个数。 

6.真假
	* 真 非0
	* 假 0

	* && 逻辑与
	* || 逻辑或

7.原码 反码 补码
	* 正数 使用原码直接存储
	* 复数 使用的反码存储
	* 转变： 
		原码 是由 反码除符号位取反
		反码 +1 = 补码

8.常见关键字
	* auto // 局部变量 - 自动变量
	* break
	* case
	* const 常变量
	* continue 
	* default
	* enum 枚举
	* extern 引入外部全局变量
	* register 寄存器 // register int a = 10  建议把a定义成寄存器变量
	* signed // ---> int 定义的变量是有符号的 =等同与 signed int unsigned int num = 0 // 无符号数
	* struct - 结构体关键字
	* union - 联合体/共用体
	* volatile

9.指针
	1.语法 : 
		* 通过'&' 来取地址
		* "基础类型* 变量名 = &变量" 来声明一个基础类型的变量

10.结构体

	1.定义：类似与java中的类相似

	2.语法：
		* 声明方法：
				struct 类名{
					基本类型 属性名1;
					基本类型 属性名2;
				};

		* 调用属性名
			对象.属性名 = 值;
			指针->属性名 = 值;

		* 指针地址使用方法
			struct 类名* 指针变量名 = $类对象;

11.循环结构

	switch(常量表达式){
		case 常量 :
			代码语句块;
			break;
		case 常量
			....

		defalut : // 上面表达式都不满足，则执行默认
			代码语句块;
			break;
	}

12.getchar() 以及 putchar()的使用

	* getchar()会读取字符缓冲区所存在的第一个字符
	* scanf("%s",&array);// 这里会从键盘都数据，直到按下enter，但是enter，也会被放入字符串缓冲区，因此如果使用getchar()，会自动读取到'\n'
		需要加入 一个句子来解决该问题
		while(getchar() != '\n'){// 让getchar()一直读，因为getchar()读了字符串缓冲区的值，会自动清楚，因此直到getchar()读到'\n',才结束循环，并且代码块中不用写任何语句

		}

13.sleep()函数,system("cls")的使用
	* 语法：sleep(时间，单位ms);system("cls")：代表清屏
	* 注意：改函数是在<window.h>头文件中，记得#include

14.字符串比较使用
	* 语法：strcmp(第一个字符串,第二个字符串) 如果strcmp返回值是0，则相等，否则不相等

15.函数

	1.库函数：
		由c语言给大家提供的常用的函数，比如：（使用库函数，需要引库）
			* stdio.h
				- printf();
			* stdlib.h
			* string.h
				- strcpy(拷贝目标,拷贝源):字符串拷贝
				- strlen():字符串长度

	2.自定义函数：
		语法：
			ret_type fun_name(para1,*){
				statement;// 函数体
			}

			考虑形参究竟是传值，还是传址：
				* 传值：不需改变函数外部某些变量，则不需要传址过去
				* 传址：需要改变调用函数的两个实参的实际值，则需要传址

		* 函数需要先声明后调用，声明一般放在.h头文件，函数实现写在.c文件文件中，使用时，直接include "xxx.h"

	3.递归：
		定义：程序调用自身的编程技巧称为递归（recursion）。递归作为一种算法在程序设计语言中广泛应用。一个过程或
		函数在其定义或说明中又直接或者间接调用自身的一种方法，它通常把一个大型复杂的问题层层转换为一个与原问题相似的
		规模较小的问题来求解，递归策略只需少量的程序就可以描述出解题过程所需要的多次重复计算，大大的减少了程序的代码量
		。递归的主要思考方式就在于：把大事化小

		* 常见错误：Stack overflow 栈溢出
		* 递归的两个条件：
			- 存在限制条件，当满足这个限制条件的时候，递归便不再继续。
			- 每次递归调用之后越来越接近这个限制条件。
	
16、数组
	1.定义：数组类型 数名名称[<数组大小，可以省略>] = {};
		* 注意：
			- 声明字符数组时，最后一位需要手动放入'\0'。
			- 定义数组时，可以不规定初始化大小，而手动直接定义值，自动初始化大小：char arr1[] = "abc";/char arr2[] = {'a','b','c','\0'};
			- 定义数组时，如果规定了数组大小，但是初始化时会将未定义的位置的元素默认赋值为0 char arr3[5] = "abc";则第3第4均为0
			- 三个常用函数的说明：
				strlen() 和 sizeof()没有什么关联
				strlen()是求字符串长度的-只能针对字符串求串长度,其计算直到'\0'才结束，如果没有'\0'则会随机返回结果 - 库函数-使用得引头文件
				sizeof() 计算变量，数组，类型的大小 - 单位是字节 - 操作符
			- 数组中元素在内存上是连续的

				

	