package com.bjpowernode.javase.array;

/**
 * Author:  blithe.xwj
 * Date:    2020/12/11 10:18
 * Description:
 *  冒泡排序算法
 *      1、每次次循环结束之后，都要找出最大的数据，放到参与比较的这堆数据的最右边。（冒出最大的那个气泡）
 *      2、核心：
 *          拿着左边的数据和右边的数字比对，当左边的数据>右边的时候，交换位置。
 *
 *      原始数据：
 *      3、2、7、6、8
 *      第一次循环：（最大的跑到最右边。）
 *      2、3、7、6、8（2和3 比较，2<3，所以2和3 交换位置）
 *      2、3、7、6、8（虽然不需要交换位置：但是3和7还是需要比较一次。）
 *      2、3、6、7、8（6和7进行比较，6<7，所以6和7交换位置）
 *      2、3、6、7、8（虽然不需要交换位置：但是实际上是先判断大小，才发现不需要交换位置）
 *
 *      经过第1次的循环，此时剩下参与比较的数据：2，3，6，7
 *      第二次循环：
 *      2，3，6，7（2和3比较不需要交换位置）
 *      2，3，6，7（3和6比较不需要交换位置）
 *      2，3，6，7（6和7比较不需要交换位置）
 *
 *      经过第2次循环，此时剩下参与比较的数据：2，3，6
 *      第三次循环：
 *      2，3，6（2和3 比较不需要交换位置）
 *      2，3，6（3和6 比较不需要交换位置）
 *
 *      经过3次循环，此时剩下参与比较的数据：2，3
 *      第四次循环：
 *      2，3（2和3 比较不需要交换位置）
 *
 *      循环结束。
 */


class BubbleSort {
    public static void main(String[] args){
        // 这是一个int类型的数组对象
        //int[] arr ={3,2,7,6,8};
        int[] arr={3,1,6,2,5,1,6};
        // 经过冒泡排序算法对以上数组中元素进行排序
        // 冒泡算法的核心是什么？

        //7条数据，循环6次。以下的代码可以循环6次
        /*
        for(int i=0;i < arr.length-1;i++){

        }

         */

        //7条数据，循环6次，以下的代码可以循环6次。（冒泡排序的外层循环采用这种方法）
        /*for(int i=arr.length-1;i>0;i--){

        }

         */
        int count=0;
        int count2=0;
        for(int i=arr.length-1;i>0;i--){
            for(int j=0;j<i;j++){
                count++;
                if(arr[j]>arr[j+1]){
                    int x = arr[j];
                    arr[j] = arr[j+1];
                    arr[j+1]=x;
                    count2++;
                }
            }
        }
        System.out.println("交换次数："+count2);
        System.out.println("比较次数："+count);
        for(int y=0;y<arr.length;y++){
            System.out.println(arr[y]);
        }
    }
}
