/*
   关于java中的数据类型：
     #数据类型的作用：
       *程序当中有很多数据， 每一个数据都是有相关类型的，不同的数据类型的数据占用空间大小不同。数据类型的作用是指导jvm 在运行程序的时候给该数据分配多大的内存空间。
     #java中的数据类型包括两种：
       *基本数据类型

       *引导数据类型【后面才学】
     #关于基本数据类型
       *基本数据类型包括四大类八小种：
         -第一类：整数型
            byte，short，int，long
         —第二类：浮点型
            float，double
         -第三类：布尔型
            boolean
         -第四类：字符型
            char 
     #字符串“abc”不属于基本数据类型，属于“引用数据类型”，但是字符属于基本数据类型；
       *字符串使用使用双引号 "avb"
       *字符使用单引号    'A'
     #八种数据类占用空间大小
       
       *基本数据类型             占用数据类型【单位：字节】
       ——————————————————————————————————————————    
       byte                           1
       short                          2
       int                            4
       long                           8
       float                          4
       double                         8
       boolean                        1 
       char                           2
     #计算机在任何情况下都只能识别二进制。例如： 只认识10101001010.....【现在的计算机底层采用交流电的方式，接通和断开两种状态，计算机只识别1或0，其他不认识】

     #二进制
       *数据的一种表示形式。十进制表示满十进一原则，而二进制表示满2进一原则
         例如：十进制
           0 1 2 3 4 5 6 7 8 9 10 11 12 13
              二进制
           0 1 10 11 100 101 110 111 1000 .....
           0 1  2  3  4   5   6   7   8
      #字节（byte）：
        1 Byte= 8 bit 【一个字节=8个比特位】一个比特位表示一个二进制位：1/0
        1 KB  = 1024 Byte
        1 MB  = 1024 KB
        1 GB  = 1024 MB
        1 TB  = 1024 GB

        1 TB  =1024* 1024* 1024* 1024* 8
      #整数型当中的byte类型，占用一个字节，所以byte类型的数据占用8个比特位。那么byte类型的取值范围是什么？
        *关于java中的数字类型，数字都是有正负之分的，所以在数字的二进制当中有一个二进制位被称为“符号位”。并且这个“符号位”在所有二进制位的最左边，0表示正数，1表示负数。

        *byte类型最大值：01111111【00000000 10000000（二进制）-1 = 00000000 01111111】
        「
        所以由二进制的转换的出来，*byte最大值为（2的7次方-1） 结果就是128-1=127
                              *byte最小值： -128【具体的怎么用二进制表示，需要用位运算表示】
                              *byte类型可以表示256个不同的数字【256个不同的二进制】

      #二进制与十进制的转换规则
        *十进制转二进制
          -直接将2的方列出来
            例如 1 2 4 8 16 32 64 128

                再将一个十进制的数字列出来，通过将2的方拼凑的方式 确定 01的位置
                   94= 64 + 16 + 8 + 4 + 2
                所以分别1  0  1    1   1   1  0   （0代表空缺的2的方）所以 94 用二进制表示= 1011110.
        *二进制转十进制
          -直接列出2的方
            例如1 2 4 8 16 32 64 128 ...

              	再将二进制列出来
              	 111011
              	 则为1+2+8+16+32

      #计算机只认识二进制，那么计算机怎么表示现实世界当中的文字呢？
        *八种基本数据类型当中，byte，short，int，long，float，double，boolean这七种数据类型计算机表示的时候比较容易，因为底层都是数字，十进制的数字和二进制之间存在一种固定的转换规则。

        *但是八种数据类型当中char类型表示的是现实世界中的文字，文字和计算机二进制之间"默认"情况下是不存在任何转换关系。

        *为了让计算机可以表示现实世界当中的文字，我们需要进行人为的干涉，需要人负责提前制定好“文字”和“二进制”之间的对照关系。这种对照关系被称为：字符编码。

        *计算机最初只支持英文，最先出现的字符编码是：ASCII码[采用一个字节编码]
          'a'--> 97 [01100001]
          'A'--> 65
          '0'--> 48（这个当中由于单引号的关系这里的‘0’变为一个字符（一个文字类似的东西将不是数字0），所以'0'有自己对应的编码

          'a'---（按照ASCII解码）-->01100001
          01100001 ---（按照ASCII编码）--> 'a'

          编码和解码的时候采用同一套字典/对照表，不会出现乱码。
          当解码和编码的时候采用的不是同一套对照表，会出现乱码的问题。

        *字符编码是由每个不同的国家的自己的计算机协会自己制定的本国语言对应二进制制定的对照关系

        *随着计算机的发展，后来出现了一种编码方式，是国际化标准组织ISO制定的，这种编码方式支持西欧语言，向上兼容SASCII码，仍然不支持中文。这种编码方式，是：ISO-8869—1 ，又被称为latin—1

        *随着计算机向亚洲发展，计算机开始支持中文、日文、韩文等国家文字，其中支持简体中文的编码方式：
              GB2312 <GBK <Gb8030
        *java语言采用的unicode编码方式（unicode统一了全球的所有文字，容量较大。）也就是为什么现在标识符可以用中文

        *现在实际开发中，一般使用UTF-8编方式较多。【统一编码方式】      
*/
/*calss 学生// 可以用中文做标识符，运行可生成.calss文件则编译没有问题
{

}
八种基本数据类型的取值范围
 类型                     取值范围
 -------------------------------------
 byte                     -128～127
 short                    -32768～32767
 int                      -2147483648～2147483647
 long                   
 float
 double
 boolean                  -ture~false 
 char                     -0~65535

 ！注意：short和char所表示的种类总数是一样的，只不过char可以表示更大的正整数。因为char没有负数。


*/

 //以下java程序主要讲解的是数据类型之: char类型

 public class DataTypeTest01
 {
  public static void main(String[] args)
  {
    //定义一个char类型的变量，起名c，同时赋值字符'a'
    char c = 'a';
    System.out.println(c);
    char x ='国';//一个中文占用两个字节，char类型正好是两个字节
    //所以java中的char类型变量可以存储一个中文字符
    System.out.println(x);
    //'ab'两个字母是字符串，无法用char命令



  }
 }